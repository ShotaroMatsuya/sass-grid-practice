.slideshow {
  grid-column: 1 / -1;
  grid-row: 2 / 3;
  position: relative;
  width: 100%;
  height: 80vh;
  @include response(xl) {
    height: 70vh;
  }
  @include response(lg) {
    height: 60vh;
  }
  @include response(md) {
    height: 50vh;
  }
  &-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: inherit;
    height: inherit;
    visibility: hidden;
    opacity: 0;

    animation: slideshow 20s linear infinite; //ここでアニメーションを実行
    img {
      width: inherit;
      height: inherit;
      object-fit: cover; //画像をトリミングする(幅に可変、高さ固定)
    }
  }
  &-content {
    background-color: rgba(color(secondary), 0.9);
    position: absolute;
    bottom: 6rem;
    right: 6rem;
    left: 6rem;
    max-width: 40rem;
    padding: 5rem;
    @include response(lg) {
      padding: 2rem;
    }

    h2 {
      font-size: size(xl) + 1.2rem;
      color: color(primary);
    }
    p {
      margin: 1rem 0;
      font-size: size(sm);
    }
  }
}

// .slideshow-slide:nth-child(1) {
//   animation-delay: 0s;
// }
// .slideshow-slide:nth-child(2) {
//   animation-delay: 4s;
// }
// .slideshow-slide:nth-child(3) {
//   animation-delay: 8s;
// }
// .slideshow-slide:nth-child(4) {
//   animation-delay: 12s;
// }
// .slideshow-slide:nth-child(5) {
//   animation-delay: 16s;
// }

//List型変数を定義
$animList: (1 0s), (2 4s), (3 8s), (4 12s), (5 16s);
@each $item in $animList {
  //nth関数はsassのビルトイン関数でlist型に用いる(第1引数はlist、第2引数はリストの何個目の要素か)
  .slideshow-slide:nth-child(#{nth($item,1)}) {
    //listの1個目の値
    animation-delay: nth($item, 2); //listの2個目の値
  }
}
@keyframes slideshow {
  0% {
    //0-2の間でfadeIn
    visibility: hidden;
    opacity: 0;
  }
  2% {
    visibility: visible;
    opacity: 1;
  }
  18% {
    //18-20の間でfadeout
    visibility: visible;
    opacity: 1;
  }
  20% {
    visibility: hidden;
    opacity: 0;
  }
  100% {
    //最初(0%)と同じ状態
    visibility: hidden;
    opacity: 0;
  }
}
